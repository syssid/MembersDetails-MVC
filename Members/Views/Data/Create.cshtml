@model Members.Models.Members

@{
    ViewBag.Title = "Create";
}

<div class="container">
    <div class="row">
        <div class="col-md-12 text-center">
            <h2 class="text-danger">Enter Member Details</h2>
        </div>
    </div>
</div>


@using (Html.BeginForm("Create", "Data", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    <div class="wrapper" style="display: block;">
        <div class="container-fluid">
            <div class="form-horizontal">
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control", onkeypress = "return isNumberKey(event)", maxlength = "10" } })
                        @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
                    </div>

                    <script>
                        function isNumberKey(evt) {
                            var charCode = (evt.which) ? evt.which : evt.keyCode;
                            if (charCode > 31 && (charCode < 48 || charCode > 57)) {
                                alert("This Feild Is Restricated To Numbers Only and Maximum 10 Digit")
                                return false;
                            }
                            return true;
                        }
                    </script>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.IdentificationType, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.IdentificationType, new SelectList(new[]
                        {
                            new { Value = "AadharCard", Text = "Aadhar Card" },
                            new { Value = "PAN", Text = "PAN" }
                        }, "Value", "Text"), "Select Identification Type", htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.IdentificationType, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.PAN_AADHAR, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.PAN_AADHAR, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.PAN_AADHAR, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Members_ID, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Members_ID, new { htmlAttributes = new {  @class = "form-control", disabled = "disabled", placeholder = "MemberID Will Automatically Created" } })
                        @Html.ValidationMessageFor(model => model.Members_ID, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.DOJ, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(model => model.DOJ, "{0:yyyy-MM-dd}", new { @class = "form-control", type = "date" })
                        @Html.ValidationMessageFor(model => model.DOJ, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Photo, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <input type="file" id="Photo" name="Photo" class="form-control-file" />
                        @Html.ValidationMessageFor(model => model.Photo, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Create" class="btn btn-success" />
                    </div>
                </div>
            </div>
        </div>
    </div>
}

<div class="create-new-button">

    <style>
        .create-new-button {
            text-align: right;
        }

            .create-new-button a {
                display: inline-block;
                padding: 6px 12px;
                background-color: #007bff;
                color: #fff;
                border: 1px solid #007bff;
                border-radius: 4px;
                text-decoration: none;
            }
    </style>

    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
